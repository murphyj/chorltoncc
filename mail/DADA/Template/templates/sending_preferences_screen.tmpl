<!-- being sending_preferences_screen.tmpl --> 

<!-- tmpl_set name="title" value="Sending Preferences" -->

<!-- tmpl_include help_link_widget.tmpl -->

<!-- tmpl_if expr="(list_settings.sending_method eq 'sendmail')" --> 
	<p class="positive">Messages are currently being sent via the sendmail command.</p>
<!-- /tmpl_if --> 
<!-- tmpl_if expr="(list_settings.sending_method eq 'smtp')" --> 
	<p class="alert">Messages are currently being sent via SMTP
<!-- tmpl_if no_smtp_server_set -->
		, but make sure to set up your SMTP server settings.
	<!-- tmpl_else --> 
		using SMTP server, <!-- tmpl_var list_settings.smtp_server --> 
	<!-- /tmpl_if --> 
	</p>	
<!-- /tmpl_if -->
<!-- tmpl_if expr="(list_settings.sending_method eq 'amazon_ses')" --> 
	<p class="positive">Messages are currently being sent via Amazon SES.</p>
<!-- /tmpl_if --> 


<form action="<!-- tmpl_var S_PROGRAM_URL -->" method="post" name="default_form">

	<fieldset>
	<legend>
	 Sendmail Options
	</legend>



	<table>
	 <tr>
	  <td>
	   <input type="radio" name="sending_method" id="sendmail" value="sendmail" <!-- tmpl_if expr="(list_settings.sending_method eq 'sendmail')" -->checked="checked"<!--/tmpl_if --> />
	  </td>
	  <td>
	   <p>
	    <label for="sendmail">
	     Send Email Using the <em>sendmail</em> Command
	    </label>
	<!-- tmpl_if comment --> 
	    <br />
		<p>
			Individual Messages will be sent out using following command: 
		</p>
			
		<p><code><!-- tmpl_var MAIL_SETTINGS  --></code></p> 
		
		<p>Mass Mailings will be sent out using the following command:</p>
		
		<p><code><!-- tmpl_var MASS_MAIL_SETTINGS  --></code></p>		
	   <!-- /tmpl_if --> 
	  </td>
	 </tr>
	</table>
	
	
	<fieldset> 
	
		<legend>  	
		<a href="#" onclick="toggleDisplay('adv_sendmail_options');return false;">
			+/- 
		</a>
		 Advanced sendmail Options
		</legend>
		<div id="adv_sendmail_options" style="display:none"> 
		
		<table cellpadding="5">
		 <tr>
		  <td>
		   <p>
		    <input type="checkbox" name="add_sendmail_f_flag" id="add_sendmail_f_flag" value="1" <!-- tmpl_if list_settings.add_sendmail_f_flag -->checked="checked"<!--/tmpl_if--> />
		   </p>
		  </td>
		  <td>
		   <p>
		    <label for="add_sendmail_f_flag">
		     Add the Sendmail '-f' flag when sending messages using 
		     <!-- tmpl_var MAILPROG -->
		    </label>
		    <br />
This will ultimately set the 'Return-Path' email header to the list administration email address (<!-- tmpl_var list_settings.admin_email --> ), and bounced messages will return to that address. Otherwise, they will go to the list owner. 			<br /> 
		   <!-- tmpl_if comment -->
		 	<!-- tmpl_var f_flag_settings -->
		   <!-- /tmpl_if --> 
			</p>

		<!-- tmpl_if wrong_uid -->

			   <p>
			    <strong>
			     Warning!
			    </strong>
			    Your effective uid is not the same as your real uid; 
			    using this option may break mail sending.
			   </p>

		<!--/tmpl_if-->

		  </td>
		 </tr>
		</table> 
	</div> 
	</fieldset> 
	
</fieldset> 

<fieldset>
<legend>
 SMTP Options
</legend>


<table>
 <tr>
  <td>
   <input type="radio" name="sending_method" id="smtp" value="smtp" <!-- tmpl_if expr="(list_settings.sending_method eq 'smtp')" -->checked="checked"<!--/tmpl_if --> />
  </td>
  <td>
   <p>
    <label for="smtp">
     Send Email Using SMTP
    </label>
    <br />
    Be sure to correctly configure your SMTP Authentication!
   </p>

  </td>
 </tr>
</table> 

<table cellpadding="5">
 <tr>
  <td>
   <p>
    <label for="smtp_server">
     SMTP Server:
    </label>
   </p>
  </td>
  <td>
   <p>
    <input type="text" name="smtp_server" id="smtp_server" value="<!-- tmpl_var list_settings.smtp_server -->" size="30" />
   </p>
  </td>
 </tr>
 <tr>
  <td>
   <p>
    <label for="smtp_port">
     Port:
    </label>
   </p>
  </td>
  <td>
  <p>
   <input type="text" name="smtp_port" id="smtp_port" value="<!-- tmpl_var list_settings.smtp_port -->" size="5" />
  </p>
  </td>
 </tr>
</table>

 

    <table <!-- tmpl_unless can_use_smtp_ssl -->class="disabled"<!--/tmpl_unless-->> 
     <tr>
      <td>
       <p>
        <input type="checkbox" name="use_smtp_ssl" id="use_smtp_ssl" value="1" <!-- tmpl_if list_settings.use_smtp_ssl -->checked="checked"<!-- /tmpl_if --> <!-- tmpl_unless can_use_smtp_ssl -->disabled="disabled"<!--/tmpl_unless-->/> 
       </p>
      </td>
      <td>
       <p>
        <label for="use_smtp_ssl">
         Use Secure Sockets Layer (SSL)
        </label>
        <!-- tmpl_unless can_use_smtp_ssl -->
            <br />
            <span class="error">
             Disabled. The Net::SMTP::SSL module needs to be installed.
            </span>
        <!--/tmpl_unless--> 
        
       </p>
      </td>
     </tr>
    </table> 
    
    
    
	<fieldset>
	<legend>
 	<a href="#" onclick="toggleDisplay('smtp_authentication');return false;">
		+/- 
	</a>
    SMTP Authentication    
		 
	</legend>
	<div id="smtp_authentication" style="display:none"> 
		
	<table>
	 <tr>
	  <td>
	   <p>
	    <input type="checkbox" name="use_sasl_smtp_auth" id="use_sasl_smtp_auth" value="1" <!-- tmpl_if use_sasl_smtp_auth -->checked="checked"<!-- /tmpl_if -->/>
	   </p>
	  </td>
	  <td>
	   <p>
	    <label for="use_sasl_smtp_auth">
	     Use SMTP Authentication (SASL)
	    </label>
	   </p>
	   <table>

	   <tr>
	     <td>
	      <p>
	       <label for="sasl_auth_mechanism">
	        Type:
	       </label>
	      </p>
	     </td>
	     <td>
	      <p>
	       <!-- tmpl_var mechanism_popup --> 
	     </p>
	     </td>
	    </tr>


	    <tr>
	     <td>
	      <p>
	       <label for="sasl_smtp_username">
	        Username:
	       </label>
	      </p>
	     </td>
	     <td>
	      <p>
	       <input type="text" name="sasl_smtp_username" id="sasl_smtp_username" value="<!-- tmpl_var sasl_smtp_username -->" size="30" />
	      </p>
	     </td>
	    </tr>
	    <tr>
	     <td>
	      <p>
	       <label for="sasl_smtp_password">
	        Password:
	       </label>
	      </p>
	     </td>
	     <td>
	      <p>
	       <input type="password" name="sasl_smtp_password" id="sasl_smtp_password" value="<!-- tmpl_var sasl_smtp_password -->" size="30" />
	      </p>
	     </td>
	    </tr>
	   </table>
	  </td>
	 </tr>
	</table>




	<table>
	 <tr>
	  <td>
	   <input type="checkbox" name="use_pop_before_smtp" id="use_pop_before_smtp" value="1" <!-- tmpl_if list_settings.use_pop_before_smtp -->checked="checked"<!-- /tmpl_if --> />
	  </td>
	  <td>
	   <p>
	    <label for="use_pop_before_smtp">
	     Use POP-Before-SMTP Authentication
	    </label>
	    <br />
	    A connection to your POP Server will be created before any mail will be sent. 
	    This can authenticate your outgoing mail requests, if your SMTP server 
	    uses POP-before-SMTP or your SMTP server does not use SASL.
	   </p>
	   <p>
	    POP-before-SMTP Authentication will require your username and password for your 
	    <strong>
	     POP3 
	    </strong>
	    Account:
	   </p>
	   <table border="0">
	    <tr>
	     <td>
	      <p>
	       <label for="pop3_server">
	        POP3 Server:
	       </label>
	      </p>
	     </td>
	     <td>
	      <p>
	       <input type="text" name="pop3_server" id="pop3_server" value="<!-- tmpl_var list_settings.pop3_server -->" size="30" />
	      </p>
	     </td>
	    </tr>
	    <tr>
	     <td>
	      <p>
	       <label for="pop3_username">
	        POP3 Username:
	       </label>
	      </p>
	     </td>
	     <td>
	      <input type="text" name="pop3_username" id="pop3_username" value="<!-- tmpl_var list_settings.pop3_username -->" size="30" />
	     </td>
	    </tr>
	    <tr>
	     <td>
	      <p>
	       <label for="pop3_password">
	        POP3 Password:
	       </label>
	      </p>
	     </td>
	     <td>
	      <p>
	       <input type="password" name="pop3_password" id="pop3_password" value ="<!-- tmpl_var decrypted_pop3_pass -->" size="30" />
	      </p>
	     </td>
	    </tr>

	 <tr>
	     <td>
	      <p>
	       <label for="pop3_auth_mode">
	        Type:
	       </label>
	      </p>
	     </td>
	     <td>
	      <p>
	       <!-- tmpl_var pop3_auth_mode_popup --> 
	     </p>
	     </td>
	    </tr>


	   </table>

	    <table <!-- tmpl_unless can_use_ssl -->class="disabled"<!--/tmpl_unless-->> 
	     <tr>
	      <td>
	       <p>
	        <input type="checkbox" name="pop3_use_ssl" id="pop3_use_ssl" value="1" <!-- tmpl_if list_settings.pop3_use_ssl -->checked="checked"<!-- /tmpl_if --> <!-- tmpl_unless can_use_ssl -->disabled="disabled"<!--/tmpl_unless-->/>
	       </p>
	      </td>
	      <td>
	       <p>
	        <label for="pop3_use_ssl">
	         Use Secure Sockets Layer (SSL)
	        </label>
	        <!-- tmpl_unless can_use_ssl -->
	            <br />
	            <span class="error">
	             Disabled. The IO::Socket::SSL module needs to be installed.
	            </span>
	        <!--/tmpl_unless--> 

	       </p>
	      </td>
	     </tr>
	    </table> 




	 </td>
	 </tr>


	</table>
	</div> 




	</fieldset>

	<fieldset>

	<legend>  	
	<a href="#" onclick="toggleDisplay('adv_smtp_options');return false;">
		+/- 
	</a>
	 Advanced SMTP Options
	</legend> 

	<div id="adv_smtp_options" style="display:none"> 
	

		<table>
		 <tr>
		  <td>
		   <p>
		    <input type="checkbox" name="set_smtp_sender" id="set_smtp_sender" value="1" <!-- tmpl_if list_settings.set_smtp_sender -->checked="checked"<!-- /tmpl_if -->  />
		   </p>
		  </td>
		  <td>
		   <p>
		    <label for="set_smtp_sender">
		     Set the Sender of SMTP Mailings to the List Administration Address
		    </label>
		    <br />
		    This will ultimately set the 'Return-Path' email header to 
		    the list administration email address (<!-- tmpl_var list_settings.admin_email -->), 
		    and bounced messages will return to that address. Otherwise, 
		    they will go to the list owner.
		   </p>
		  </td>
		 </tr>

		</table>
	</div> 
	
	</fieldset>

   
</fieldset>


	<fieldset>
	<legend>
	 Amazon SES Options
	</legend>

	<table>
	 <tr>
	  <td>
	   <input type="radio" name="sending_method" id="amazon_ses" value="amazon_ses" <!-- tmpl_if expr="(list_settings.sending_method eq 'amazon_ses')" -->checked="checked"<!--/tmpl_if --> />
	  </td>
	  <td>
	   <p>
	    <label for="amazon_ses">
	     Send Email Using the <em>Amazon Simple Email Service</em>
	    </label></p>
	
		<!-- tmpl_if has_aws_credentials_file --> 
			<p class="positive">Your AWS crendentials are being looked for in:</p> 
			<ul> 
				<li><p class="positive"><!-- tmpl_var aws_credentials_file --></p></li> 
			</ul>
		<!-- tmpl_else --> 
			<p class="error">
				Cannot find your AWS crendentials (<!-- tmpl_var aws_credentials_file default="not set!" -->)
			</p>
		<!-- /tmpl_if -->
		<!-- tmpl_if has_ses_verify_email_address_script --> 
			<p class="positive">The, &quot;ses-verify-email-address.pl&quot; script is being looked for at:</p> 
			<ul> 
				<li><p class="positive"><!-- tmpl_var ses_verify_email_address_script --></p></li> 
			</ul>
		<!-- tmpl_else --> 
		<p class="error">
			Cannot find your &quot;ses-verify-email-address.pl&quot; script (<!-- tmpl_var ses_verify_email_address_script default="not set!" -->)
		</p>
		<!-- /tmpl_if -->		
		
		<!-- tmpl_if amazon_ses_has_needed_cpan_modules --> 
			<p class="positive"> 
				All needed CPAN modules are installed!
			</p> 
		<!-- tmpl_else --> 
			<p class="error"> 
				One or more of the following CPAN modules needs to be installed for Amazon SES sending to work:
			</p>
			
			<ul> 
				<!-- tmpl_loop amazon_ses_required_modules --> 
					<!-- tmpl_unless installed --> 
						 <li>
						 <p class="error">  
						  <!-- tmpl_var module --> 
						 </p> 
						</li> 
					<!-- /tmpl_unless --> 
				<!-- /tmpl_loop --> 
			</ul> 
		<!-- /tmpl_if --> 
	
		<div id="amazon_ses_get_stats"></div> 
		
		<fieldset>
		<legend>
		 Amazon SES Tools
		</legend>
		<p>
		<input type="text" name="amazon_ses_verify_email" id="amazon_ses_verify_email" value="<!-- tmpl_var list_settings.list_owner_email -->" /> <input type="button" class="" value="Verify Address for Sending" onClick="amazon_verify_email();" /> 
		</p> 
		<div id="amazon_ses_verify_email_results"> 
		</div> 
		<div id="amazon_ses_verify_email_loading" style="display:none;"> 
		<p class="positive">Loading...</p>
		</div> 
		
	</fieldset> 
	
	  </td>
	 </tr>
	</table>
	
	
</fieldset>


<input type="hidden" name="process" id="process" value="1" /> 
<input type="hidden" name="f" id="flavor" value="sending_preferences" />

<div class="buttonfloat">
 <input type="reset"  class="cautionary" value="Clear Changes" />
 <input type="submit" class="processing" value="Save Changes" />
</div>
<div class="floatclear"></div>

</form> 

<fieldset> 

	<script type="text/javascript">
	    //<![CDATA[
	
		 function get_sending_method() { 
			var sending_method = '';
			if(document.default_form.sending_method.length){
				for (var i=0; i < document.default_form.sending_method.length; i++){
					if (document.default_form.sending_method[i].checked){
							sending_method = document.default_form.sending_method[i].value;	
					}
				}
			}
			return sending_method; 
		}

		 function amazon_verify_email() { 
			new Ajax.Updater(
				'amazon_ses_verify_email_results', '<!-- tmpl_var S_PROGRAM_URL -->', 
				{ 
				    method: 'post', 
					parameters: {
						f: 'amazon_ses_verify_email',
						amazon_ses_verify_email: $F('amazon_ses_verify_email')
						},

				onCreate: 	 function() {
					$('amazon_ses_verify_email_results').hide(); 
					$('amazon_ses_verify_email_loading').show();

				},
				onComplete: 	 function() {

					$('amazon_ses_verify_email_loading').hide();
					Effect.BlindDown('amazon_ses_verify_email_results');

				}	


				});
		}
		
		
		 function test_sending_preferences(){ 
			var sending_method = get_sending_method(); 
			new Ajax.Updater(
				'sending_preferences_test', '<!-- tmpl_var S_PROGRAM_URL -->', 
				{ 
				    method: 'post', 
					parameters: {
						add_sendmail_f_flag:       $F('add_sendmail_f_flag'), 
						smtp_server:               $F('smtp_server'), 
						smtp_port:                 $F('smtp_port'),
						use_smtp_ssl:              $F('use_smtp_ssl'),			
						use_sasl_smtp_auth:        $F('use_sasl_smtp_auth'), 
						sasl_auth_mechanism:       $F('sasl_auth_mechanism'), 
						sasl_smtp_username:        $F('sasl_smtp_username'), 
						sasl_smtp_password:        $F('sasl_smtp_password'), 
						use_pop_before_smtp:       $F('use_pop_before_smtp'), 
						pop3_server:               $F('pop3_server'), 
						pop3_username:             $F('pop3_username'), 
						pop3_password:             $F('pop3_password'), 
						pop3_use_ssl:              $F('pop3_use_ssl'), 
						set_smtp_sender:           $F('set_smtp_sender'),
						process:                   $F('process'),
						f:                         'sending_preferences_test',
						sending_method:             sending_method, 

						},

				onCreate: 	 function() {
					$('sending_preferences_test').hide(); 
					$('sending_preferences_test_loading').show();

				},
				onComplete: 	 function() {

					$('sending_preferences_test_loading').hide();
					Effect.BlindDown('sending_preferences_test');

				}	


				});
		}
		
		 function amazon_ses_get_stats() { 
			new Ajax.Updater(
				'amazon_ses_get_stats', '<!-- tmpl_var S_PROGRAM_URL -->', 
				{ 
				    method: 'post', 
					parameters: {
						f:                    'amazon_ses_get_stats', 
					},

				onCreate: 	 function() {
				},
				onComplete: 	 function() {

					$('amazon_ses_get_stats').show(); 
				}
				});
		}
		
		<!-- tmpl_if amazon_ses_has_needed_cpan_modules --> 
			amazon_ses_get_stats();
		<!-- /tmpl_if --> 
		
	    //]]>
	</script>

	<p>
		<input type="button"  value="Save, Then Test Your Sending Preferences..." class="processing" onClick="test_sending_preferences();" /> 
	</p> 

	<div id="sending_preferences_test_loading" style="display:none;background:#fff">
		<p class="alert">Loading...</p>
	</div>
	<div id="sending_preferences_test" style="background:#fff"></div>	

</fieldset>
 

<!-- end sending_preferences_screen.tmpl --> 
